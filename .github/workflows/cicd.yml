---

name: cicd

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Set up Go
              uses: actions/setup-go@v3
              with:
                  go-version: '>=1.20.0'
            - run: go version
            - name: Build
              run: go build -v ./...
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Extract metadata (tags, labels) for Docker
              uses: docker/metadata-action@v4
              id: meta
              with:
                  images: ghcr.io/joint-online-judge/go-horse
                  flavor: |
                      latest=${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
            - name: Set output
              id: output
              run: |
                  TAGS="${{ steps.meta.outputs.tags }}"
                  echo "$TAGS"
                  TAG="${TAGS%%$'\n'*}"
                  echo "$TAG"
                  echo "::set-output name=tag::$TAG"
            - name: Build and push Docker image
              id: docker_build
              uses: docker/build-push-action@v4
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
    test:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Set up Go
              uses: actions/setup-go@v3
              with:
                  go-version: '>=1.20.0'
            - run: go version
            - name: Test
              run: go test -v ./...
    # remote-ssh-command:
    #     if: github.event_name == 'push' && (github.ref == 'refs/heads/master')
    #     needs: test
    #     runs-on: ubuntu-20.04
    #     steps:
    #         - name: executing remote ssh commands using ssh key
    #           uses: appleboy/ssh-action@master
    #           with:
    #               host: ${{ secrets.HOST }}
    #               username: ${{ secrets.USERNAME }}
    #               key: ${{ secrets.KEY }}
    #               port: ${{ secrets.PORT }}
    #               script: |
    #                   cd ~/joj-deploy
    #                   git pull
    #                   ./start.sh prod
    #                   docker image prune -f
